<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.hlju.tour.dao.HotelCommentMapper">
    <resultMap id="BaseResultMap" type="cn.edu.hlju.tour.entity.HotelComment">
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="hotel_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
      id, hotel_id, content, user_id, time
    </sql>

    <delete id="delByUserId" parameterType="long[]">
        delete from hotel_comment
        where user_id in
        <foreach collection="array" open="(" item="id" separator=", " close=")">
            #{id, jdbcType=BIGINT}
        </foreach>
    </delete>

    <select id="selectCommentByHotelId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from hotel_comment
        where hotel_id = #{id,jdbcType=BIGINT} order by time DESC
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from hotel_comment
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from hotel_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="cn.edu.hlju.tour.entity.HotelComment">
    insert into hotel_comment (id, hotel_id, content, 
      user_id, time)
    values (#{id,jdbcType=BIGINT}, #{hotelId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{time,jdbcType=TIMESTAMP})
  </insert>


    <insert id="insertSelective" parameterType="cn.edu.hlju.tour.entity.HotelComment">
        insert into hotel_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="hotelId != null">
                hotel_id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="time != null">
                time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="hotelId != null">
                #{hotelId,jdbcType=BIGINT},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.hlju.tour.entity.HotelComment">
        update hotel_comment
        <set>
            <if test="hotelId != null">
                hotel_id = #{hotelId,jdbcType=BIGINT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.hlju.tour.entity.HotelComment">
    update hotel_comment
    set hotel_id = #{hotelId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>